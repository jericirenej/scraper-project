{"version":3,"sources":["components/urlInput.jsx","components/selectorControls.jsx","components/dropDownMenu.jsx","components/inputBox.jsx","components/multipleCheckbox.jsx","components/selectors.jsx","components/PassIndex.js","components/singleList.jsx","classes/ScrapeList.js","components/header.jsx","App.jsx","index.js"],"names":["SiteMapURL","props","urlValue","siteName","onSiteInputChange","urlProp","nameProp","siteNum","onSiteDelete","className","type","placeholder","value","onChange","input","title","onClick","SelectorControls","AddChild","AddSelector","Delete","siblings","parentType","TypeDropDown","selectorID","onTypeChange","htmlFor","name","id","hidden","InputBox","selectorValue","index","subType","onSelectorChange","MultipleCheck","checkedStatus","checked","Selector","onDeleteSelector","onSiteClear","onAddSelector","onAddChild","parentIndex","selectorName","children","position","ExtractIndex","parent","selectors","siteMaps","targetArray","filter","entry","parentOf","includes","length","console","log","findIndex","PassIndex","componentClass","indexArray","ancestorClass","ancestor","push","reverse","ancestorID","childOf","join","SingleSrapeList","selectorProperty","onClearSiteMap","stateArray","item","RecursiveRender","map","element","flat","property","target","selector","singleList","SiteMap","nanoid","this","url","parentID","multiple","memberOfSiteMap","addSelector","state","childID","find","x","newSelector","undefined","newOrdering","slice","findSiteMap","forEach","deleteItem","newState","count","RecursiveDelete","arr","Header","initialArray","App","getProperty","query","targetID","setState","addSiteMap","newListID","onDeleteItem","clearSiteMap","handleSiteUpdate","toggleMultipleCheck","handleMultipleCheckToggle","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab5ffd1a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BiTrash as DeleteList } from \"react-icons/bi\";\r\n\r\nconst SiteMapURL = props => {\r\n  const {\r\n    urlValue,\r\n    siteName,\r\n    onSiteInputChange,\r\n    urlProp,\r\n    nameProp,\r\n    siteNum,\r\n    onSiteDelete,\r\n  } = props;\r\n  return (\r\n    <div className=\"list wrapper\">\r\n      <div className=\"list-name label\">\r\n        <label>List: </label>\r\n      </div>\r\n      <div className=\"list-name input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Sitemap name\"\r\n          value={siteName}\r\n          onChange={input => onSiteInputChange(input, nameProp)}\r\n        />\r\n      </div>\r\n      <div className=\"list-URL label\">\r\n        <label>URL: </label>\r\n      </div>\r\n      <div className=\"list-URL input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"URL address\"\r\n          value={urlValue}\r\n          onChange={input => onSiteInputChange(input, urlProp)}\r\n        />\r\n      </div>\r\n      <div className=\"list-delete\">\r\n        {siteNum > 1 ? (\r\n          <DeleteList\r\n            className=\"deleteList button\"\r\n            title=\"Delete the current sitemap.\"\r\n            onClick={onSiteDelete}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteMapURL;\r\n","import React from \"react\";\r\nimport { BsArrowReturnRight as AddChildIcon, BsPlusCircle as AddSelectorIcon, BsXSquare as DeleteIcon } from \"react-icons/bs\";\r\n\r\nconst SelectorControls = props => {\r\n  const { AddChild, AddSelector, Delete, siblings, parentType } = props;\r\n  return (\r\n    <div className=\"selector-list controls\">\r\n      <AddChildIcon\r\n        className=\"addChildButton button\"\r\n        onClick={AddChild}\r\n        title=\"Add a child selector.\"\r\n      />\r\n      <AddSelectorIcon\r\n        className=\"addSelectorButton button\"\r\n        title=\"Add a new selector for this list.\"\r\n        onClick={AddSelector}\r\n      />\r\n      {/*Add Delete button only if the number of line items is greater than one.*/}\r\n      {siblings > 1 || parentType !== \"sitemap\" ? (\r\n        <DeleteIcon\r\n          className=\"deleteSelectorButton button\"\r\n          title=\"Recursively delete the current selector.\"\r\n          onClick={Delete}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorControls;\r\n","const TypeDropDown = ({ selectorID, onTypeChange }) => {\r\n  return (\r\n    <div className=\"selector-list type\">\r\n      <label htmlFor={`selector-${selectorID}`}>Type</label>\r\n      <select\r\n        onChange={input => onTypeChange(input)}\r\n        name=\"selector-type-select\"\r\n        id={`selector-${selectorID}`}>\r\n        <option value=\"\" hidden></option>\r\n        <option value=\"Link\">Link</option>\r\n        <option value=\"Text\">Text</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypeDropDown;\r\n","const InputBox = props => {\r\n  const { selectorID, selectorValue, index, placeholder, subType, onSelectorChange } = props;\r\n  return (\r\n    <div className={`selector-list ${subType}`} id={`${selectorID}-${subType}`}>\r\n      <input\r\n        type=\"text\"\r\n        value={selectorValue}\r\n        placeholder={placeholder}\r\n        onChange={(input) => onSelectorChange(input, subType)}\r\n        id={`${subType}-${index + 1}`}></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from \"react\";\r\n\r\nconst MultipleCheck = ({ selectorID, checkedStatus, onSelectorChange }) => {\r\n  return (\r\n    <div className=\"selector-list multiple checkbox\">\r\n      <label htmlFor={`checkbox-${selectorID}`}>Multiple?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={input => onSelectorChange(input)}\r\n        id={`checkbox-${selectorID}`}\r\n        checked={checkedStatus}></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipleCheck;\r\n","import React from \"react\";\r\nimport SelectorControls from \"./selectorControls.jsx\";\r\nimport TypeDropDown from \"./dropDownMenu.jsx\";\r\nimport { BiEraser as EraseSelectors } from \"react-icons/bi\";\r\nimport InputBox from \"./inputBox.jsx\";\r\nimport MultipleCheck from \"./multipleCheckbox.jsx\";\r\n\r\nconst Selector = props => {\r\n  const {\r\n    selectorID,\r\n    onDeleteSelector,\r\n    onSiteClear,\r\n    onAddSelector,\r\n    onAddChild,\r\n    onSelectorChange,\r\n    parentIndex,\r\n    index,\r\n    selectorValue,\r\n    selectorName,\r\n    siblings,\r\n    children,\r\n    parentType,\r\n    position,\r\n    checkedStatus,\r\n  } = props;\r\n  return (\r\n    <li\r\n      className={`selector-list wrapper`}\r\n      key={`lineItem-${selectorID}`}\r\n      id={`lineItem-${selectorID}`}>\r\n      <div className=\"selector-list label\">\r\n        <label htmlFor={selectorID}>\r\n          Sel. {parentIndex ? `${parentIndex}.${index + 1}: ` : `${index + 1 }: `}\r\n        </label>\r\n      </div>\r\n      <InputBox\r\n        placeholder=\"Selector name\"\r\n        selectorID = {selectorID}\r\n        subType=\"name\"\r\n        index={index}\r\n        onSelectorChange={(input, type) => onSelectorChange(input, type)}\r\n        selectorValue={selectorName}\r\n      />\r\n      <InputBox\r\n      selectorID = {selectorID}\r\n        placeholder=\"Selector definition\"\r\n        subType=\"value\"\r\n        index={index}\r\n        onSelectorChange={input => onSelectorChange(input, \"value\")}\r\n        selectorValue={selectorValue}\r\n      />\r\n\r\n      <TypeDropDown\r\n        selectorID={selectorID}\r\n        onTypeChange={input => onSelectorChange(input, \"type\")}\r\n      />\r\n      <MultipleCheck\r\n        selectorID={selectorID}\r\n        onSelectorChange={input => onSelectorChange(input, \"multiple\")}\r\n        checked={checkedStatus}\r\n      />\r\n      <SelectorControls\r\n        AddChild={onAddChild}\r\n        AddSelector={onAddSelector}\r\n        Delete={onDeleteSelector}\r\n        /*onSiteClear={onSiteClear}*/\r\n        siblings={siblings}\r\n        parentType={parentType}\r\n        position={position}\r\n      />\r\n      {/* Add Clear SiteMap to first selector */}\r\n      {(siblings > 1 || children >= 1) && parentType === \"sitemap\" && position === 0 ? (\r\n        <EraseSelectors\r\n          className=\"clearSiteMapButton button\"\r\n          title=\"Clear all selectors.\"\r\n          onClick={onSiteClear}\r\n        />\r\n      ) : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Selector;\r\n","const PassIndex = (parent, selectors, siteMaps) => {\r\n  if (parent.componentClass === \"sitemap\") {\r\n    return;\r\n  }\r\n  let indexArray = [];\r\n  let ancestorClass = \"selector\";\r\n  let ancestor = parent;\r\n  while (ancestorClass !== \"sitemap\") {\r\n    indexArray.push(ExtractIndex(ancestor, selectors, siteMaps));\r\n    console.log(\"Intermediate array indices: \", indexArray.reverse());\r\n    const ancestorID = ancestor.childOf[0];\r\n    siteMaps.filter(entry => entry.id === ancestorID).length === 0\r\n      ? (ancestor = selectors.filter(entry => entry.id === ancestorID)[0])\r\n      : (ancestorClass = \"sitemap\");\r\n  }\r\n\r\n  return indexArray.join(\".\");\r\n};\r\n\r\nconst ExtractIndex = (parent, selectors, siteMaps) => {\r\n  let targetArray = [];\r\n\r\n  siteMaps.filter(entry => entry.parentOf.includes(parent.id)).length > 0\r\n    ? (targetArray = siteMaps)\r\n    : (targetArray = selectors);\r\n\r\n  console.log(\"Target array: \", targetArray);\r\n  const targetElement = targetArray.filter(entry => entry.parentOf.includes(parent.id));\r\n  return targetElement[0].parentOf.findIndex(children => children === parent.id) + 1;\r\n};\r\n\r\nexport default PassIndex;\r\n","import React, { Fragment } from \"react\";\r\nimport SiteMapURL from \"./urlInput.jsx\";\r\nimport Selector from \"./selectors.jsx\";\r\nimport PassIndex from \"./PassIndex.js\";\r\n\r\nconst SingleSrapeList = props => {\r\n  const {\r\n    onSiteInputChange,\r\n    onSiteDelete,\r\n    onSelectorChange,\r\n    selectorProperty,\r\n    onAddSelector,\r\n    onAddChild,\r\n    onDeleteSelector,\r\n    onClearSiteMap,\r\n    stateArray,\r\n  } = props;\r\n  const siteMaps = stateArray.filter(item => item.componentClass === \"sitemap\");\r\n  const selectors = stateArray.filter(item => item.componentClass === \"selector\");\r\n\r\n\r\n  function RecursiveRender(selectors, parent, siteMaps) {\r\n    const childIDs = parent.parentOf;\r\n    const children = childIDs\r\n      .map(item => selectors.filter(element => element.id === item))\r\n      .flat();\r\n    if (children) {\r\n      return (\r\n        <ul\r\n          key={parent.id}\r\n          id={parent.id}\r\n          className={parent.componentClass === \"sitemap\" ? \"singleList\" : \"\"}>\r\n          {parent.componentClass === \"sitemap\" ? (\r\n            <SiteMapURL\r\n              key={`url--${parent.id}`}\r\n              urlValue={parent.value}\r\n              siteName={parent.name}\r\n              urlProp=\"url\"\r\n              nameProp=\"name\"\r\n              onSiteInputChange={(input, property) =>\r\n                onSiteInputChange(parent.id, input.target.value, property)\r\n              }\r\n              onSiteDelete={() => onSiteDelete(parent.id)}\r\n              siteNum={siteMaps.length}\r\n            />\r\n          ) : null}\r\n\r\n          {children.map(selector => {\r\n            return (\r\n              <Fragment key={`Fragment-${selector.id}`}>\r\n                <Selector\r\n                  key={selector.id}\r\n                  selectorID={selector.id}\r\n                  parentIndex= {parent.componentClass !== \"sitemap\" ? PassIndex(parent, selectors, siteMaps) : null}\r\n                  index={parent.parentOf.findIndex(element => element === selector.id)}\r\n                  siblings={parent.parentOf.length}\r\n                  children={selector.parentOf.length}\r\n                  parentType={parent.componentClass}\r\n                  position={parent.parentOf.findIndex(item => item === selector.id)}\r\n                  selectorName={selectorProperty(selector.id, \"name\")}\r\n                  selectorValue={selectorProperty(selector.id, \"value\")}\r\n                  onSelectorChange={(input, type) =>\r\n                    onSelectorChange(selector.id, input.target.value, type)\r\n                  }\r\n                  checkedStatus={selectorProperty(selector.id, \"multiple\")}\r\n                  onAddSelector={() =>\r\n                    onAddSelector(\r\n                      parent.id,\r\n                      parent.parentOf.findIndex(element => element === selector.id)\r\n                    )\r\n                  }\r\n                  onAddChild={() => onAddChild(selector.id)}\r\n                  onDeleteSelector={() => onDeleteSelector(selector.id)}\r\n                  onSiteClear={() => onClearSiteMap(parent)}\r\n                />\r\n                {selector.parentOf.length ? (\r\n                  <ul key={`${selector.id}-children`}>\r\n                    {RecursiveRender(selectors, selector, siteMaps)}\r\n                  </ul>\r\n                ) : null}\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {siteMaps.map(singleList => RecursiveRender(selectors, singleList, siteMaps))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SingleSrapeList;\r\n","import { nanoid } from \"nanoid\";\r\n\r\nclass SiteMap {\r\n  constructor(id = nanoid(), name = \"\") {\r\n    this.id = id;\r\n    this.url = \"\";\r\n    this.componentClass = \"sitemap\";\r\n    this.name = name;\r\n    this.parentOf = [];\r\n  }\r\n\r\n  updateSitemap(input, property) {\r\n    this[property] = input;\r\n  }\r\n}\r\n\r\nclass Selector {\r\n  constructor(parentID, id = nanoid()) {\r\n    this.id = id;\r\n    this.name=\"\";\r\n    this.value = \"\";\r\n    this.multiple = \"\";\r\n    this.componentClass = \"selector\";\r\n    this.type = \"\";\r\n    this.memberOfSiteMap = \"\";\r\n    this.childOf = [parentID];\r\n    this.parentOf = [];\r\n  }\r\n  updateSelector(input, property) {\r\n    this[property] = input;\r\n  }\r\n}\r\n\r\n//------------------------\r\n//------------------------\r\n\r\nfunction addSelector(state, parentID, index, childID = nanoid()) {\r\n  if (state.find(item => item.id === childID)) {\r\n    return console.log(\"Error: a child with this id already exists!\");\r\n  }\r\n  let parent = state.filter(x => x.id === parentID)[0];\r\n  if (!parent) {\r\n    return console.log(\"Error: Parent does not exist!\");\r\n  }\r\n\r\n  let newSelector = new Selector(parentID, childID);\r\n  //if element index was undefined, assume that selector should be pushed to the\r\n  //childOf list of the parent element.\r\n  if (index === undefined) {\r\n    index = parent.parentOf.length ? parent.parentOf.length - 1 : 0;\r\n  }\r\n  //Set position of child in parentOf.\r\n  if (index === parent.parentOf.length - 1 || parent.parentOf.length === 0) {\r\n    parent.parentOf.push(childID);\r\n  } else {\r\n    let newOrdering = [\r\n      ...parent.parentOf.slice(0, index + 1),\r\n      childID,\r\n      ...parent.parentOf.slice(index + 1),\r\n    ];\r\n    parent.parentOf = newOrdering;\r\n  }\r\n\r\n  //Determine the siteMap id of which the selector is a member by tracing the parents\r\n  //until an item with the componentClass === \"sitemap\" is found. This method presumers\r\n  //that only one parent of a child can exist, even though the array type of the cildOf\r\n  //property indicates the possibility of future implementation of shared parents.\r\n  const findSiteMap = parent => {\r\n    parent.componentClass === \"sitemap\"\r\n      ? (newSelector.memberOfSiteMap = parent.id)\r\n      : findSiteMap(state.filter(item => item.id === parent.childOf[0])[0]);\r\n  };\r\n  findSiteMap(parent);\r\n\r\n  //Now, push the new selector to the state.\r\n  state.push(newSelector);\r\n  //If new selector is added, also update the parent.\r\n  state.forEach(item => {\r\n    if (item.id === parentID) {\r\n      return (item = parent);\r\n    }\r\n  });\r\n}\r\n\r\n//Delete a selector, remove reference in parent, and remove  its descend\r\nfunction deleteItem(state, id) {\r\n  let newState = [];\r\n  let count = 1;\r\n  //------------------------\r\n  //Recursively remove children of a deleted selector.\r\n  const RecursiveDelete = (arr, id) => {\r\n    const target = arr.filter(item => item.id === id);\r\n\r\n    //Filter out the selector\r\n    newState = arr.filter(item => item.id !== id);\r\n\r\n    //Find parent and remove reference on first iteration (in subsequent\r\n    //iterations the parent is already removed at this point).\r\n    if (count === 1) {\r\n      let parent = arr.filter(item => item.parentOf.includes(id));\r\n      if (parent.length) {\r\n        parent = parent[0];\r\n        let parentIndex = arr.findIndex(item => item.parentOf.includes(id));\r\n        parent = parent.parentOf.filter(item => item !== id);\r\n        newState[parentIndex].parentOf = parent;\r\n      }\r\n    }\r\n    count++;\r\n\r\n    //Extract child id's and run the Remove script for each of them.\r\n    const children = target.map(item => item.parentOf).flat();\r\n    if (children.length) {\r\n      children.forEach(element => RecursiveDelete(newState, element));\r\n    }\r\n    return newState;\r\n  };\r\n  //------------------------\r\n  return (state = RecursiveDelete(state, id));\r\n}\r\n\r\nfunction clearSiteMap(arr, siteMapID) {\r\n  //Filter out all the selectors, whose memberOfSiteMap property equals siteMapID.\r\n  //Additionally, remove child entries in the siteMap node. This  function needs to be invoked as an assignment operation.\r\n  let newArray = arr.filter(item => item.memberOfSiteMap !== siteMapID);\r\n  newArray[newArray.findIndex(item => item.id === siteMapID)].parentOf = [];\r\n  return newArray;\r\n}\r\n\r\nexport { SiteMap, Selector, addSelector, deleteItem, clearSiteMap };\r\n","const Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"title-bar\">\r\n        <h1 id=\"main-title\" className=\"title\">\r\n          CDS -\r\n        </h1>\r\n        <div className=\"main-subtitle\">\r\n          <h2 className=\"title inline-subtitle\">Compact Desktop Scraper</h2>\r\n          <p>A work in progress</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport SingleSrapeList from \"./components/singleList\";\r\nimport { SiteMap, addSelector, deleteItem } from \"./classes/ScrapeList.js\";\r\nimport { BiListPlus as AddNewList } from \"react-icons/bi\";\r\nimport \"./style.css\";\r\nimport Header from \"./components/header\";\r\n\r\nlet initialArray = [];\r\ninitialArray.push(new SiteMap(\"InitialMap\", \"First Map\"));\r\naddSelector(initialArray, \"InitialMap\", 0, \"First Selector\");\r\n\r\nclass App extends Component {\r\n  state = {\r\n    siteMaps: initialArray,\r\n  };\r\n\r\n  getProperty = (id, property) => {\r\n    let query = this.state.siteMaps;\r\n    let index = query.findIndex(item => item.id === id);\r\n    let value = query[index][property];\r\n    return value;\r\n  };\r\n\r\n  onAddSelector = (targetID, index) => {\r\n    let newState = this.state.siteMaps;\r\n    addSelector(newState, targetID, index);\r\n    this.setState({ siteMaps: newState });\r\n  };\r\n\r\n  handleSiteUpdate(id, input, property) {\r\n    let newState = this.state.siteMaps;\r\n    let index = newState.findIndex(item => item.id === id);\r\n    newState[index][property] = input;\r\n    this.setState({ siteMaps: newState });\r\n  }\r\n\r\n  addSiteMap = () => {\r\n    let newState = this.state.siteMaps;\r\n    let newListID = nanoid();\r\n    newState.push(new SiteMap(newListID));\r\n    addSelector(newState, newListID);\r\n    this.setState({ siteMaps: newState });\r\n  };\r\n\r\n  onDeleteItem = id => {\r\n    let newState = this.state.siteMaps;\r\n    newState = deleteItem(newState, id);\r\n    this.setState({ siteMaps: newState });\r\n  };\r\n\r\n  clearSiteMap = parent => {\r\n    let newState = this.state.siteMaps;\r\n    const children = parent.parentOf;\r\n    for (let childID of children) {\r\n      newState = deleteItem(newState, childID);\r\n    }\r\n\r\n    addSelector(newState, parent.id);\r\n    this.setState({ siteMaps: newState });\r\n  };\r\n\r\n  render() {\r\n    const siteMaps = this.state.siteMaps;\r\n    return (\r\n      <Fragment>\r\n      <Header />\r\n      <div className=\"list-container\">\r\n        <SingleSrapeList\r\n          stateArray={siteMaps}\r\n          onSiteInputChange={(id, input, property) =>\r\n            this.handleSiteUpdate(id, input, property)\r\n          }\r\n          onSiteDelete={id => this.onDeleteItem(id)}\r\n          onSelectorChange={(id, input, property) =>\r\n            this.handleSiteUpdate(id, input, property)\r\n          }\r\n          selectorProperty={(id, property) => this.getProperty(id, property)}\r\n          toggleMultipleCheck={(input)=> this.handleMultipleCheckToggle(input)}\r\n          onAddSelector={(id, index) => this.onAddSelector(id, index)}\r\n          onAddChild={id => this.onAddSelector(id)}\r\n          onDeleteSelector={id => this.onDeleteItem(id)}\r\n          onClearSiteMap={parent => this.clearSiteMap(parent)}\r\n        />\r\n        <AddNewList\r\n          className=\"addNewList button\"\r\n          title=\"Add another scraping list\"\r\n          onClick={() => this.addSiteMap()}\r\n        />\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/* */\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.jsx\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}