{"version":3,"sources":["components/urlInput.jsx","components/selectorControls.jsx","components/inputBox.jsx","components/multipleCheckbox.jsx","components/selectors.jsx","components/PassIndex.js","components/singleList.jsx","classes/ScrapeList.js","components/header.jsx","App.jsx","index.js"],"names":["SiteMapURL","props","urlValue","siteName","onSiteInputChange","urlProp","nameProp","siteNum","onSiteDelete","className","type","placeholder","value","onChange","input","title","onClick","SelectorControls","AddChild","AddSelector","Delete","siblings","parentType","InputBox","selectorID","selectorValue","index","subType","onSelectorChange","id","MultipleCheck","checkedStatus","htmlFor","checked","Selector","onDeleteSelector","onSiteClear","onAddSelector","onAddChild","parentIndex","selectorName","children","position","ExtractIndex","parent","selectors","siteMaps","targetArray","filter","entry","parentOf","includes","length","console","log","findIndex","PassIndex","componentClass","indexArray","ancestorClass","ancestor","push","reverse","ancestorID","childOf","join","SingleSrapeList","selectorProperty","onClearSiteMap","stateArray","item","RecursiveRender","map","element","flat","name","property","target","selector","singleList","SiteMap","nanoid","this","url","parentID","multiple","memberOfSiteMap","addSelector","state","childID","find","stateSelector","error","newSelector","undefined","newOrdering","slice","findSiteMap","forEach","deleteItem","newState","count","RecursiveDelete","arr","Header","initialArray","App","getProperty","query","targetID","setState","addSiteMap","newListID","onDeleteItem","clearSiteMap","handleSiteUpdate","toggleMultipleCheck","handleMultipleCheckToggle","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e4abc51.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BiTrash as DeleteList } from \"react-icons/bi\";\r\n\r\nconst SiteMapURL = props => {\r\n  const {\r\n    urlValue,\r\n    siteName,\r\n    onSiteInputChange,\r\n    urlProp,\r\n    nameProp,\r\n    siteNum,\r\n    onSiteDelete,\r\n  } = props;\r\n  return (\r\n    <div className=\"list wrapper\">\r\n      <div className=\"list-name label\">\r\n        <label>List: </label>\r\n      </div>\r\n      <div className=\"list-name input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Sitemap name\"\r\n          value={siteName}\r\n          onChange={input => onSiteInputChange(input, nameProp)}\r\n        />\r\n      </div>\r\n      <div className=\"list-URL label\">\r\n        <label>URL: </label>\r\n      </div>\r\n      <div className=\"list-URL input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"URL address\"\r\n          value={urlValue}\r\n          onChange={input => onSiteInputChange(input, urlProp)}\r\n        />\r\n      </div>\r\n      <div className=\"list-delete\">\r\n        {siteNum > 1 ? (\r\n          <DeleteList\r\n            className=\"deleteList button\"\r\n            title=\"Delete the current sitemap.\"\r\n            onClick={onSiteDelete}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteMapURL;\r\n","import React from \"react\";\r\nimport { BsArrowReturnRight as AddChildIcon, BsPlusCircle as AddSelectorIcon, BsXSquare as DeleteIcon } from \"react-icons/bs\";\r\n\r\nconst SelectorControls = props => {\r\n  const { AddChild, AddSelector, Delete, siblings, parentType } = props;\r\n  return (\r\n    <div className=\"selector-list controls\">\r\n      <AddChildIcon\r\n        className=\"addChildButton button\"\r\n        onClick={AddChild}\r\n        title=\"Add a child selector.\"\r\n      />\r\n      <AddSelectorIcon\r\n        className=\"addSelectorButton button\"\r\n        title=\"Add a new selector for this list.\"\r\n        onClick={AddSelector}\r\n      />\r\n      {/*Add Delete button only if the number of line items is greater than one.*/}\r\n      {siblings > 1 || parentType !== \"sitemap\" ? (\r\n        <DeleteIcon\r\n          className=\"deleteSelectorButton button\"\r\n          title=\"Recursively delete the current selector.\"\r\n          onClick={Delete}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorControls;\r\n","const InputBox = props => {\r\n  const { selectorID, selectorValue, index, placeholder, subType, onSelectorChange } = props;\r\n  return (\r\n    <div className={`selector-list ${subType}`} id={`${selectorID}-${subType}`}>\r\n      <input\r\n        type=\"text\"\r\n        value={selectorValue}\r\n        placeholder={placeholder}\r\n        onChange={(input) => onSelectorChange(input, subType)}\r\n        id={`${subType}-${index + 1}`}></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from \"react\";\r\n\r\nconst MultipleCheck = ({ selectorID, checkedStatus, onSelectorChange }) => {\r\n  return (\r\n    <div className=\"selector-list multiple checkbox\">\r\n      <label htmlFor={`checkbox-${selectorID}`}>Multiple?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={input => onSelectorChange(input)}\r\n        id={`checkbox-${selectorID}`}\r\n        checked={checkedStatus}></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipleCheck;\r\n","import React from \"react\";\r\nimport SelectorControls from \"./selectorControls.jsx\";\r\n//import TypeDropDown from \"./dropDownMenu.jsx\";\r\nimport { BiEraser as EraseSelectors } from \"react-icons/bi\";\r\nimport InputBox from \"./inputBox.jsx\";\r\nimport MultipleCheck from \"./multipleCheckbox.jsx\";\r\n\r\nconst Selector = props => {\r\n  const {\r\n    selectorID,\r\n    onDeleteSelector,\r\n    onSiteClear,\r\n    onAddSelector,\r\n    onAddChild,\r\n    onSelectorChange,\r\n    parentIndex,\r\n    index,\r\n    selectorValue,\r\n    selectorName,\r\n    siblings,\r\n    children,\r\n    parentType,\r\n    position,\r\n    checkedStatus,\r\n  } = props;\r\n  return (\r\n    <li\r\n      className={`selector-list wrapper`}\r\n      key={`lineItem-${selectorID}`}\r\n      id={`lineItem-${selectorID}`}>\r\n      <div className=\"selector-list label\">\r\n        <label htmlFor={selectorID}>\r\n          Sel. {parentIndex ? `${parentIndex}.${index + 1}: ` : `${index + 1 }: `}\r\n        </label>\r\n      </div>\r\n      <InputBox\r\n        placeholder=\"Selector name\"\r\n        selectorID = {selectorID}\r\n        subType=\"name\"\r\n        index={index}\r\n        onSelectorChange={(input, type) => onSelectorChange(input, type)}\r\n        selectorValue={selectorName}\r\n      />\r\n      <InputBox\r\n      selectorID = {selectorID}\r\n        placeholder=\"Selector definition\"\r\n        subType=\"value\"\r\n        index={index}\r\n        onSelectorChange={input => onSelectorChange(input, \"value\")}\r\n        selectorValue={selectorValue}\r\n      />\r\n\r\n      {/*<TypeDropDown\r\n        selectorID={selectorID}\r\n        onTypeChange={input => onSelectorChange(input, \"type\")}\r\n      />*/}\r\n      <MultipleCheck\r\n        selectorID={selectorID}\r\n        onSelectorChange={input => onSelectorChange(input, \"multiple\")}\r\n        checked={checkedStatus}\r\n      />\r\n      <SelectorControls\r\n        AddChild={onAddChild}\r\n        AddSelector={onAddSelector}\r\n        Delete={onDeleteSelector}\r\n        /*onSiteClear={onSiteClear}*/\r\n        siblings={siblings}\r\n        parentType={parentType}\r\n        position={position}\r\n      />\r\n      {/* Add Clear SiteMap to first selector */}\r\n      {(siblings > 1 || children >= 1) && parentType === \"sitemap\" && position === 0 ? (\r\n        <EraseSelectors\r\n          className=\"clearSiteMapButton button\"\r\n          title=\"Clear all selectors.\"\r\n          onClick={onSiteClear}\r\n        />\r\n      ) : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Selector;\r\n","const PassIndex = (parent, selectors, siteMaps) => {\r\n  if (parent.componentClass === \"sitemap\") {\r\n    return;\r\n  }\r\n  let indexArray = [];\r\n  let ancestorClass = \"selector\";\r\n  let ancestor = parent;\r\n  while (ancestorClass !== \"sitemap\") {\r\n    indexArray.push(ExtractIndex(ancestor, selectors, siteMaps));\r\n    console.log(\"Intermediate array indices: \", indexArray.reverse());\r\n    const ancestorID = ancestor.childOf[0];\r\n    siteMaps.filter(entry => entry.id === ancestorID).length === 0\r\n      ? (ancestor = selectors.filter(entry => entry.id === ancestorID)[0])\r\n      : (ancestorClass = \"sitemap\");\r\n  }\r\n\r\n  return indexArray.join(\".\");\r\n};\r\n\r\nconst ExtractIndex = (parent, selectors, siteMaps) => {\r\n  let targetArray = [];\r\n\r\n  siteMaps.filter(entry => entry.parentOf.includes(parent.id)).length > 0\r\n    ? (targetArray = siteMaps)\r\n    : (targetArray = selectors);\r\n\r\n  console.log(\"Target array: \", targetArray);\r\n  const targetElement = targetArray.filter(entry => entry.parentOf.includes(parent.id));\r\n  return targetElement[0].parentOf.findIndex(children => children === parent.id) + 1;\r\n};\r\n\r\nexport default PassIndex;\r\n","import React, { Fragment } from \"react\";\r\nimport SiteMapURL from \"./urlInput.jsx\";\r\nimport Selector from \"./selectors.jsx\";\r\nimport PassIndex from \"./PassIndex.js\";\r\n\r\nconst SingleSrapeList = props => {\r\n  const {\r\n    onSiteInputChange,\r\n    onSiteDelete,\r\n    onSelectorChange,\r\n    selectorProperty,\r\n    onAddSelector,\r\n    onAddChild,\r\n    onDeleteSelector,\r\n    onClearSiteMap,\r\n    stateArray,\r\n  } = props;\r\n  const siteMaps = stateArray.filter(item => item.componentClass === \"sitemap\");\r\n  const selectors = stateArray.filter(item => item.componentClass === \"selector\");\r\n\r\n\r\n  function RecursiveRender(selectors, parent, siteMaps) {\r\n    const childIDs = parent.parentOf;\r\n    const children = childIDs\r\n      .map(item => selectors.filter(element => element.id === item))\r\n      .flat();\r\n    if (children) {\r\n      return (\r\n        <ul\r\n          key={parent.id}\r\n          id={parent.id}\r\n          className={parent.componentClass === \"sitemap\" ? \"singleList\" : \"\"}>\r\n          {parent.componentClass === \"sitemap\" ? (\r\n            <SiteMapURL\r\n              key={`url--${parent.id}`}\r\n              urlValue={parent.value}\r\n              siteName={parent.name}\r\n              urlProp=\"url\"\r\n              nameProp=\"name\"\r\n              onSiteInputChange={(input, property) =>\r\n                onSiteInputChange(parent.id, input.target.value, property)\r\n              }\r\n              onSiteDelete={() => onSiteDelete(parent.id)}\r\n              siteNum={siteMaps.length}\r\n            />\r\n          ) : null}\r\n\r\n          {children.map(selector => {\r\n            return (\r\n              <Fragment key={`Fragment-${selector.id}`}>\r\n                <Selector\r\n                  key={selector.id}\r\n                  selectorID={selector.id}\r\n                  parentIndex= {parent.componentClass !== \"sitemap\" ? PassIndex(parent, selectors, siteMaps) : null}\r\n                  index={parent.parentOf.findIndex(element => element === selector.id)}\r\n                  siblings={parent.parentOf.length}\r\n                  children={selector.parentOf.length}\r\n                  parentType={parent.componentClass}\r\n                  position={parent.parentOf.findIndex(item => item === selector.id)}\r\n                  selectorName={selectorProperty(selector.id, \"name\")}\r\n                  selectorValue={selectorProperty(selector.id, \"value\")}\r\n                  onSelectorChange={(input, type) =>\r\n                    onSelectorChange(selector.id, input.target.value, type)\r\n                  }\r\n                  checkedStatus={selectorProperty(selector.id, \"multiple\")}\r\n                  onAddSelector={() =>\r\n                    onAddSelector(\r\n                      parent.id,\r\n                      parent.parentOf.findIndex(element => element === selector.id)\r\n                    )\r\n                  }\r\n                  onAddChild={() => onAddChild(selector.id)}\r\n                  onDeleteSelector={() => onDeleteSelector(selector.id)}\r\n                  onSiteClear={() => onClearSiteMap(parent)}\r\n                />\r\n                {selector.parentOf.length ? (\r\n                  <ul key={`${selector.id}-children`}>\r\n                    {RecursiveRender(selectors, selector, siteMaps)}\r\n                  </ul>\r\n                ) : null}\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {siteMaps.map(singleList => RecursiveRender(selectors, singleList, siteMaps))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SingleSrapeList;\r\n","import { nanoid } from \"nanoid\";\r\n\r\nclass SiteMap {\r\n  constructor(id = nanoid(), name = \"\") {\r\n    this.id = id;\r\n    this.url = \"\";\r\n    this.componentClass = \"sitemap\";\r\n    this.name = name;\r\n    this.parentOf = [];\r\n  }\r\n\r\n  updateSitemap(input, property) {\r\n    this[property] = input;\r\n  }\r\n}\r\n\r\nclass Selector {\r\n  constructor(parentID, id = nanoid()) {\r\n    this.id = id;\r\n    this.name = \"\";\r\n    this.value = \"\";\r\n    this.multiple = \"\";\r\n    this.componentClass = \"selector\";\r\n    this.type = \"\";\r\n    this.memberOfSiteMap = \"\";\r\n    this.childOf = [parentID];\r\n    this.parentOf = [];\r\n  }\r\n  updateSelector(input, property) {\r\n    this[property] = input;\r\n  }\r\n}\r\n\r\n//METHODS\r\n\r\nfunction addSelector(state, parentID, index, childID = nanoid()) {\r\n  if (state.find(stateSelector => stateSelector.id === childID)) {\r\n    return console.error(\"Error: a child with this id already exists!\");\r\n  }\r\n  let parent = state.filter(stateSelector => stateSelector.id === parentID);\r\n  if (!parent.length) {\r\n    return console.error(\"Error: Parent does not exist!\");\r\n  }\r\n  parent = parent[0];\r\n\r\n  //If a selector has children, then it is a \"link\" type.\r\n  parent.type = \"link\";\r\n\r\n  let newSelector = new Selector(parentID, childID);\r\n  //if element index was undefined, push the selector to the childOf list of the parent.\r\n  if (index === undefined) {\r\n    index = parent.parentOf.length ? parent.parentOf.length - 1 : 0;\r\n  }\r\n  //Set position of child in parentOf.\r\n  if (index === parent.parentOf.length - 1 || parent.parentOf.length === 0) {\r\n    parent.parentOf.push(childID);\r\n  } else {\r\n    let newOrdering = [\r\n      ...parent.parentOf.slice(0, index + 1),\r\n      childID,\r\n      ...parent.parentOf.slice(index + 1),\r\n    ];\r\n    parent.parentOf = newOrdering;\r\n  }\r\n\r\n  //Determine the siteMap id of which the selector is a member by tracing the parents.\r\n  //Only one parent per child allowed.\r\n  const findSiteMap = parent => {\r\n    parent.componentClass === \"sitemap\"\r\n      ? (newSelector.memberOfSiteMap = parent.id)\r\n      : findSiteMap(state.filter(item => item.id === parent.childOf[0])[0]);\r\n  };\r\n  findSiteMap(parent);\r\n\r\n  //Now, push the new selector to the state.\r\n  state.push(newSelector);\r\n  //If new selector is added, also update the parent.\r\n  state.forEach(item => {\r\n    if (item.id === parentID) {\r\n      return (item = parent);\r\n    }\r\n  });\r\n}\r\n\r\n//Delete a selector, remove reference in parent, and remove  its descend\r\nfunction deleteItem(state, id) {\r\n  let newState = [];\r\n  let count = 1;\r\n  \r\n  //Recursively remove children of a deleted selector.\r\n  const RecursiveDelete = (arr, id) => {\r\n    const target = arr.filter(item => item.id === id);\r\n    //Filter out the selector\r\n    newState = arr.filter(item => item.id !== id);\r\n    //Find parent and remove reference on first iteration.\r\n    if (count === 1) {\r\n      let parent = arr.filter(item => item.parentOf.includes(id));\r\n      if (parent.length) {\r\n        parent = parent[0];\r\n        let parentIndex = arr.findIndex(item => item.parentOf.includes(id));\r\n        parent = parent.parentOf.filter(item => item !== id);\r\n        newState[parentIndex].parentOf = parent;\r\n      }\r\n    }\r\n    count++;\r\n\r\n    //Extract child id's and run the Remove script for each of them.\r\n    const children = target.map(item => item.parentOf).flat();\r\n    if (children.length) {\r\n      children.forEach(element => RecursiveDelete(newState, element));\r\n    }\r\n    return newState;\r\n  };\r\n\r\n  return state = RecursiveDelete(state, id);\r\n}\r\n\r\nfunction clearSiteMap(arr, siteMapID) {\r\n  //Filter out all the selectors, whose memberOfSiteMap property equals siteMapID.\r\n  //Also remove child entries in the siteMap node.\r\n  let newArray = arr.filter(item => item.memberOfSiteMap !== siteMapID);\r\n  newArray[newArray.findIndex(item => item.id === siteMapID)].parentOf = [];\r\n  return newArray;\r\n}\r\n\r\nexport { SiteMap, Selector, addSelector, deleteItem, clearSiteMap };","const Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"title-bar\">\r\n        <h1 id=\"main-title\" className=\"title\">\r\n          CDS -\r\n        </h1>\r\n        <div className=\"main-subtitle\">\r\n          <h2 className=\"title inline-subtitle\">Compact Desktop Scraper</h2>\r\n          <p>A work in progress</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport SingleSrapeList from \"./components/singleList\";\r\nimport { SiteMap, addSelector, deleteItem } from \"./classes/ScrapeList.js\";\r\nimport { BiListPlus as AddNewList } from \"react-icons/bi\";\r\nimport \"./style.css\";\r\nimport Header from \"./components/header\";\r\n\r\nlet initialArray = [];\r\ninitialArray.push(new SiteMap(\"InitialMap\", \"First Map\"));\r\naddSelector(initialArray, \"InitialMap\", 0, \"First Selector\");\r\n\r\nclass App extends Component {\r\n  state = {\r\n    siteMaps: initialArray,\r\n  };\r\n\r\n  getProperty = (id, property) => {\r\n    let query = this.state.siteMaps;\r\n    let index = query.findIndex(item => item.id === id);\r\n    let value = query[index][property];\r\n    return value;\r\n  };\r\n\r\n  onAddSelector = (targetID, index) => {\r\n    let newState = this.state.siteMaps;\r\n    addSelector(newState, targetID, index);\r\n    this.setState({ siteMaps: newState });\r\n  };\r\n\r\n  handleSiteUpdate(id, input, property) {\r\n    let newState = this.state.siteMaps;\r\n    let index = newState.findIndex(item => item.id === id);\r\n    newState[index][property] = input;\r\n    this.setState({ siteMaps: newState });\r\n  }\r\n\r\n  addSiteMap = () => {\r\n    let newState = this.state.siteMaps;\r\n    let newListID = nanoid();\r\n    newState.push(new SiteMap(newListID));\r\n    addSelector(newState, newListID);\r\n    this.setState({ siteMaps: newState });\r\n  };\r\n\r\n  onDeleteItem = id => {\r\n    let newState = this.state.siteMaps;\r\n    newState = deleteItem(newState, id);\r\n    this.setState({ siteMaps: newState });\r\n  };\r\n\r\n  clearSiteMap = parent => {\r\n    let newState = this.state.siteMaps;\r\n    const children = parent.parentOf;\r\n    for (let childID of children) {\r\n      newState = deleteItem(newState, childID);\r\n    }\r\n\r\n    addSelector(newState, parent.id);\r\n    this.setState({ siteMaps: newState });\r\n  };\r\n\r\n  render() {\r\n    const siteMaps = this.state.siteMaps;\r\n    return (\r\n      <Fragment>\r\n      <Header />\r\n      <div className=\"list-container\">\r\n        <SingleSrapeList\r\n          stateArray={siteMaps}\r\n          onSiteInputChange={(id, input, property) =>\r\n            this.handleSiteUpdate(id, input, property)\r\n          }\r\n          onSiteDelete={id => this.onDeleteItem(id)}\r\n          onSelectorChange={(id, input, property) =>\r\n            this.handleSiteUpdate(id, input, property)\r\n          }\r\n          selectorProperty={(id, property) => this.getProperty(id, property)}\r\n          toggleMultipleCheck={(input)=> this.handleMultipleCheckToggle(input)}\r\n          onAddSelector={(id, index) => this.onAddSelector(id, index)}\r\n          onAddChild={id => this.onAddSelector(id)}\r\n          onDeleteSelector={id => this.onDeleteItem(id)}\r\n          onClearSiteMap={parent => this.clearSiteMap(parent)}\r\n        />\r\n        <AddNewList\r\n          className=\"addNewList button\"\r\n          title=\"Add another scraping list\"\r\n          onClick={() => this.addSiteMap()}\r\n        />\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/* */\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.jsx\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}